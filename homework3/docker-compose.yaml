name: "homework3"
services:


  log:
    build:
      context: ./LogService
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    depends_on:
      - kafka


  metric:
    build:
      context: ./MetricService
    ports:
      - "8083:8083"
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - DB_ADDRESS=metric_db
      - DB_PORT=5432
      - DB_NAME=metricDB
    depends_on:
      - kafka
      - metric_db


  metric_db:
    image: postgres
    environment:
      - POSTGRES_DB=metricDB
      - POSTGRES_USER=server
      - POSTGRES_PASSWORD=server
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_film:/var/lib/postgresql/data_metric
    restart: unless-stopped

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9092
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@host.docker.internal:9093
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_LOG_LEVEL=DEBUG
      - KAFKA_KRAFT_CLUSTER_ID=_SNIuIJGTKO4RVsd_-rMiw
    volumes:
      - kafka_data:/bitnami/kafka
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092" ]
      interval: 30s
      timeout: 10s
      retries: 5

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

    depends_on:
      - metric

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

    depends_on:
      - prometheus

volumes:
  postgres_data_film:
  kafka_data:
    driver: local
