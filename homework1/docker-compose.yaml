version: '3.8'
name: homeWork1
services:
  service1:
    build:
      context: ./service1
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    networks:
      - kafka-network


  service2:
    build:
      context: ./service2
    restart: on-failure
    depends_on:
      - kafka
      - service1
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    networks:
      - kafka-network

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9092
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@host.docker.internal:9093
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_LOG_LEVEL=DEBUG
      - KAFKA_KRAFT_CLUSTER_ID=_SNIuIJGTKO4RVsd_-rMiw # Замени на сгенерированный UUID
    volumes:
      - kafka_data:/bitnami/kafka
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "localhost:9092" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge

volumes:
  kafka_data: